from tqdm import tqdm

main_data = ['T25B201G', 'T25B202E', 'T25B203C', 'T25B204A', 'T25B205K', 'T25B206H', 'T25B207F', 'T25B208D', 'T25B209B', 'T25B210F', 'T25B211D', 'T25B212B', 'T25B213A', 'T25B214J', 'T25B215G', 'T25B216E', 'T25B217C', 'T25B218A', 'T25B219K', 'T25B220C', 'T25B221A', 'T25B222K', 'T25B223H', 'T25B224F', 'T25B225D', 'T25B226B', 'T25B227A', 'T25B228J', 'T25B229G', 'T25B230A', 'T25B231J', 'T25B232G', 'T25B233E', 'T25B234C', 'T25B235A', 'T25B236K', 'T25B237H', 'T25B238F', 'T25B239D', 'T25B240H', 'T25B241F', 'T25B242D', 'T25B243B', 'T25B244A', 'T25B245J', 'T25B246G', 'T25B247E', 'T25B248C', 'T25B249A', 'T25B252E', 'T25B252C', 'T25B252A', 'T25B253K', 'T25B254H', 'T25B255F', 'T25B256D', 'T25B257B', 'T25B258A', 'T25B259J', 'T25B260B', 'T25B261A', 'T25B262J', 'T25B263G', 'T25B264E', 'T25B265C', 'T25B266A', 'T25B267K', 'T25B268H', 'T25B269F', 'T25B270K', 'T25B271H', 'T25B272F', 'T25B273D', 'T25B274B', 'T25B275A', 'T25B276J', 'T25B277G', 'T25B278E', 'T25B279C', 'T25B280G', 'T25B281E', 'T25B282C', 'T25B283A', 'T25B284K', 'T25B285H', 'T25B286F', 'T25B287D', 'T25B288B', 'T25B289A', 'T25B290D', 'T25B291B', 'T25B292A', 'T25B293J', 'T25B294G', 'T25B295E', 'T25B296C', 'T25B297A', 'T25B298K', 'T25B299H', 'T25B300E', 'T25B301C', 'T25B302A', 'T25B303K', 'T25B304H', 'T25B305F', 'T25B306D', 'T25B307B', 'T25B308A', 'T25B309J', 'T25B310B', 'T25B311A', 'T25B312J', 'T25B313G', 'T25B314E', 'T25B315C', 'T25B316A', 'T25B317K', 'T25B318H', 'T25B319F', 'T25B320K', 'T25B321H', 'T25B322F', 'T25B323D', 'T25B324B', 'T25B325A', 'T25B326J', 'T25B327G', 'T25B328E', 'T25B329C', 'T25B330G', 'T25B331E', 'T25B332C', 'T25B333A', 'T25B334K', 'T25B335H', 'T25B336F', 'T25B337D', 'T25B338B', 'T25B339A', 'T25B340D', 'T25B341B', 'T25B342A', 'T25B343J', 'T25B344G', 'T25B345E', 'T25B346C', 'T25B347A', 'T25B348K', 'T25B349H', 'T25B350A', 'T25B351K', 'T25B352H', 'T25B353F', 'T25B354D', 'T25B355B', 'T25B356A', 'T25B357J', 'T25B358G', 'T25B359E', 'T25B360J', 'T25B361G', 'T25B362E', 'T25B363C', 'T25B364A', 'T25B365K', 'T25B366H', 'T25B367F', 'T25B368D', 'T25B369B', 'T25B961E']
matubi_suji = [6, 4, 2, 0, 9, 7, 5, 3, 1, 5, 3, 1, 0, 8, 6, 4, 2, 0, 9, 2, 0, 9, 7, 5, 3, 1, 0, 8, 6, 0, 8, 6, 4, 2, 0, 9, 7, 5, 3, 7, 5, 3, 1, 0, 8, 6, 4, 2, 0, 4, 2, 0, 9, 7, 5, 3, 1, 0, 8, 1, 0, 8, 6, 4, 2, 0, 9, 7, 5, 9, 7, 5, 3, 1, 0, 8, 6, 4, 2, 6, 4, 2, 0, 9, 7, 5, 3, 1, 0, 3, 1, 0, 8, 6, 4, 2, 0, 9, 7, 4, 2, 0, 9, 7, 5, 3, 1, 0, 8, 1, 0, 8, 6, 4, 2, 0, 9, 7, 5, 9, 7, 5, 3, 1, 0, 8, 6, 4, 2, 6, 4, 2, 0, 9, 7, 5, 3, 1, 0, 3, 1, 0, 8, 6, 4, 2, 0, 9, 7, 0, 9, 7, 5, 3, 1, 0, 8, 6, 4, 8, 6, 4, 2, 0, 9, 7, 5, 3, 1, 4]
converted_data = ['251201', '251202', '251203', '251204', '251205', '251206', '251207', '251208', '251209', '251210', '251211', '251212', '251213', '251214', '251215', '251216', '251217', '251218', '251219', '251220', '251221', '251222', '251223', '251224', '251225', '251226', '251227', '251228', '251229', '251230', '251231', '251232', '251233', '251234', '251235', '251236', '251237', '251238', '251239', '251240', '251241', '251242', '251243', '251244', '251245', '251246', '251247', '251248', '251249', '251250', '251251', '251252', '251253', '251254', '251255', '251256', '251257', '251258', '251259', '251260', '251261', '251262', '251263', '251264', '251265', '251266', '251267', '251268', '251269', '251270', '251271', '251272', '251273', '251274', '251275', '251276', '251277', '251278', '251279', '251280', '251281', '251282', '251283', '251284', '251285', '251286', '251287', '251288', '251289', '251290', '251291', '251292', '251293', '251294', '251295', '251296', '251297', '251298', '251299', '251300', '251301', '251302', '251303', '251304', '251305', '251306', '251307', '251308', '251309', '251310', '251311', '251312', '251313', '251314', '251315', '251316', '251317', '251318', '251319', '251320', '251321', '251322', '251323', '251324', '251325', '251326', '251327', '251328', '251329', '251330', '251331', '251332', '251333', '251334', '251335', '251336', '251337', '251338', '251339', '251340', '251341', '251342', '251343', '251344', '251345', '251346', '251347', '251348', '251349', '251350', '251351', '251352', '251353', '251354', '251355', '251356', '251357', '251358', '251359', '251360', '251361', '251362', '251363', '251364', '251365', '251366', '251367', '251368', '251369', '251961']

def simbulk(): 
    print('一括') 
    bar = tqdm(total=100)
    e, e2, e3 = [], [], []
    file = open('Tsim-bulk.txt', 'w', encoding='UTF-8')
    
    
    for n in range(100) :
        e = list(map(lambda x: str(n).zfill(2)+x , converted_data))
        e2 = list(map(lambda x: (3*int(x[0]))+(2*int(x[1]))+(7*int(x[2]))+(6*int(x[3]))+(5*int(x[4]))+(4*int(x[5]))+(3*int(x[6]))+(2*int(x[7])) ,e))
        e3 = list(map(lambda x: (11 - (x % 11)) if not(x % 11 == 0 or x % 11 == 1) else 0, e2))  
        file.write(str(e)+str(e2)+str(e3)+'\n')
        if matubi_suji == e3 :
            print('Match : T='+str(n))
        bar.update(1)
    file.close()

def simspl() :
    print('分割')
    bar = tqdm(total=100)
    e, e2 , e3, mm = [], [], [], 0,
    file = open('Tsim-spl.txt', 'w', encoding='UTF-8')
    

    for n in range(100) :
        e = list(map(lambda x: str(n).zfill(2)+x ,converted_data))
        for p in e :
            for i in range(8):
                m = (int(p[i])) if i % 2 == 0 else (2*int(p[i])) #12121212 01234567
                mm = (mm + m) if (len(str(m)) == 1) else (mm + int(str(m)[0]) + int(str(m)[1]))
            e2.append(mm)
            mm = 0
        e3 = list(map(lambda x: (11 - (x % 11)) if not(x % 11 == 0 or x % 11 == 1) else 0, e2))  
        file.write(str(e)+str(e2)+str(e3)+'\n')
        if matubi_suji == e3 :
            print('coefficient is found!')
            print('Match : T='+str(n))
            break
        e2.clear()
        bar.update(1)
    file.close()

simbulk()
#simspl()